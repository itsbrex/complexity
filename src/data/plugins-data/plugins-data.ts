import { CplxPluginMetadata } from "@/data/plugins-data/plugins-data.types";
import { getPlatform } from "@/hooks/usePlatformDetection";

export const PLUGINS_METADATA: CplxPluginMetadata = {
  "queryBox:languageModelSelector": {
    id: "queryBox:languageModelSelector",
    routeSegment: "query-box-language-model-selector",
    title: "Language Model Selector",
    description: "Take complete control of all available language models.",
    tags: ["ui", "ux", "pplxPro"],
    uiGroup: ["queryBoxes:toolbar"],
    dependentDomObservers: ["coreDomObserver:queryBoxes"],
    dependentCorePlugins: ["networkIntercept", "spaRouter"],
  },
  "queryBox:slashCommandMenu": {
    id: "queryBox:slashCommandMenu",
    routeSegment: "query-box-slash-command-menu",
    title: "Slash Command Menu",
    description: "Invoke actions via slash commands",
    tags: ["desktopOnly", "ui", "ux"],
    uiGroup: ["queryBoxes:toolbar"],
    dependentDomObservers: ["coreDomObserver:queryBoxes"],
    dependentCorePlugins: ["spaRouter", "networkIntercept"],
  },
  "queryBox:slashCommandMenu:promptHistory": {
    id: "queryBox:slashCommandMenu:promptHistory",
    routeSegment: "query-box-slash-command-menu-prompt-history",
    title: "Prompt History",
    description: "Reuse previous prompts",
    tags: ["experimental", "slashCommand", "desktopOnly", "ui", "ux"],
    dependentDomObservers: ["coreDomObserver:queryBoxes"],
    dependentPlugins: ["queryBox:slashCommandMenu"],
    dependentCorePlugins: ["spaRouter", "networkIntercept"],
  },
  spaceNavigator: {
    id: "spaceNavigator",
    routeSegment: "space-navigator",
    title: "Space Navigator",
    description: "Search & navigate between spaces",
    tags: ["ui", "ux"],
    uiGroup: ["queryBoxes:toolbar"],
    dependentDomObservers: [
      "coreDomObserver:queryBoxes",
      "coreDomObserver:sidebar",
      "coreDomObserver:spacesPage",
    ],
    dependentCorePlugins: ["spaRouter"],
  },
  "sidebar:toggleableRecentThreads": {
    id: "sidebar:toggleableRecentThreads",
    routeSegment: "sidebar-toggleable-recent-threads",
    title: "Sidebar: Hide Recent Threads",
    tags: ["ui", "new"],
    description: "Hide recent threads on the sidebar",
    dependentDomObservers: ["coreDomObserver:sidebar"],
    dependentCorePlugins: ["spaRouter"],
  },
  "queryBox:noFileCreationOnPaste": {
    id: "queryBox:noFileCreationOnPaste",
    routeSegment: "query-box-no-file-creation-on-paste",
    title: "Prevent File Creation on Paste",
    description:
      "Prevent automatic file creation when pasting (very) long text into the query box",
    tags: ["ux"],
    dependentDomObservers: ["coreDomObserver:queryBoxes"],
    dependentCorePlugins: ["spaRouter"],
  },
  "queryBox:submitOnCtrlEnter": {
    id: "queryBox:submitOnCtrlEnter",
    routeSegment: "query-box-submit-on-ctrl-enter",
    title: `Query Box: Submit on ${getPlatform() === "mac" ? "Cmd" : "Ctrl"}+Enter`,
    description: `Insert new line on Enter, submit on ${getPlatform() === "mac" ? "Cmd" : "Ctrl"}+Enter`,
    tags: ["ux"],
    dependentDomObservers: ["coreDomObserver:queryBoxes"],
    dependentCorePlugins: ["spaRouter"],
  },
  "queryBox:fullWidthFollowUp": {
    id: "queryBox:fullWidthFollowUp",
    routeSegment: "query-box-full-width-follow-up",
    title: "Full Width Follow Up Query Box",
    description: "Make the query box in threads wider",
    tags: ["desktopOnly", "ui"],
    dependentDomObservers: ["coreDomObserver:queryBoxes"],
    dependentCorePlugins: ["spaRouter"],
  },
  commandMenu: {
    id: "commandMenu",
    routeSegment: "command-menu",
    title: "Command Menu",
    description: "Quickly navigate around and invoke actions",
    tags: ["ui", "ux", "desktopOnly"],
    dependentCorePlugins: ["spaRouter", "webSocket"],
  },
  "thread:toc": {
    id: "thread:toc",
    routeSegment: "thread-toc",
    title: "Thread ToC",
    description:
      "Quickly navigate between messages in a thread. Only shows up when there are more than 2 messages",
    tags: ["ui", "ux"],
    dependentDomObservers: ["coreDomObserver:thread:messageBlocks"],
    dependentCorePlugins: ["spaRouter", "reactVdom"],
  },
  "thread:rawHeadings": {
    id: "thread:rawHeadings",
    routeSegment: "thread-raw-headings",
    title: "Thread: Raw Headings",
    description: "Prevent headings from being rendered as follow-up links",
    tags: ["new", "ui", "ux"],
  },
  "thread:betterMessageToolbars": {
    id: "thread:betterMessageToolbars",
    routeSegment: "thread-better-message-toolbars",
    title: "Better Thread Message Toolbars",
    description: "Enhance message toolbars (in threads)",
    tags: ["ui", "ux"],
    dependentDomObservers: ["coreDomObserver:thread:messageBlocks"],
    dependentCorePlugins: ["spaRouter", "reactVdom"],
  },
  "thread:instantRewriteButton": {
    id: "thread:instantRewriteButton",
    routeSegment: "thread-instant-rewrite-button",
    title: "Instant Thread Message Rewrite Buttons",
    description:
      "Rewrite messages with the same model without opening the original Rewrite dropdown menu",
    tags: ["ui", "ux"],
    uiGroup: ["thread:messageBlocks:queryHoverContainer"],
    dependentDomObservers: ["coreDomObserver:thread:messageBlocks"],
    dependentCorePlugins: ["spaRouter", "reactVdom"],
  },
  "thread:betterCodeBlocks": {
    id: "thread:betterCodeBlocks",
    routeSegment: "thread-better-code-blocks",
    title: "Better Code Blocks",
    description: "Enhance code blocks (in threads)",
    tags: ["ui", "ux", "codeBlockHighPerformanceImpact"],
    dependentDomObservers: ["coreDomObserver:thread:codeBlocks"],
    dependentCorePlugins: ["spaRouter", "reactVdom"],
  },
  "thread:canvas": {
    id: "thread:canvas",
    routeSegment: "thread-canvas",
    title: "Canvas",
    description:
      "Visualize and interact with generated content side by side. Similar to claude.ai's artifacts. Very experimental",
    tags: ["experimental", "desktopOnly", "ui"],
    dependentPlugins: ["thread:betterCodeBlocks"],
    dependentDomObservers: [
      "coreDomObserver:thread:messageBlocks",
      "coreDomObserver:thread:codeBlocks",
    ],
    dependentCorePlugins: ["spaRouter", "mermaidRenderer", "markmapRenderer"],
  },
  "thread:exportThread": {
    id: "thread:exportThread",
    routeSegment: "thread-export-thread",
    title: "Export Thread",
    description:
      "Export the current thread in markdown format (with optional citations). More formatting options coming soon",
    tags: ["ui", "ux"],
    dependentDomObservers: ["coreDomObserver:thread:messageBlocks"],
    dependentCorePlugins: ["spaRouter", "reactVdom"],
  },
  "thread:betterMessageCopyButtons": {
    id: "thread:betterMessageCopyButtons",
    routeSegment: "thread-better-message-copy-buttons",
    title: "Better Thread Message Copy Buttons",
    description:
      "Copy message content without citations. More formatting options coming soon",
    tags: ["ui", "ux"],
    uiGroup: ["thread:messageBlocks:queryHoverContainer"],
    dependentDomObservers: ["coreDomObserver:thread:messageBlocks"],
    dependentCorePlugins: ["spaRouter", "reactVdom"],
  },
  "thread:dragAndDropFileToUploadInThread": {
    id: "thread:dragAndDropFileToUploadInThread",
    routeSegment: "thread-drag-and-drop-file-to-upload-in-thread",
    title: "Drag and Drop File(s) to Upload in a thread",
    description:
      "Treat the whole thread page as a drop zone and allow you to directly drag & drop file(s) to upload them as attachment(s)",
    tags: ["ux", "desktopOnly"],
    dependentCorePlugins: ["spaRouter"],
  },
  "thread:collapseEmptyThreadVisualCols": {
    id: "thread:collapseEmptyThreadVisualCols",
    routeSegment: "thread-collapse-empty-thread-visual-cols",
    title: "Collapse Empty Thread Visual Columns",
    description: "Collapse empty visual columns in the thread page",
    tags: ["ui", "desktopOnly"],
    dependentCorePlugins: ["spaRouter"],
  },
  "thread:customThreadContainerWidth": {
    id: "thread:customThreadContainerWidth",
    routeSegment: "thread-custom-thread-container-width",
    title: "Custom Thread Container Width",
    description: "Customize the maximum width of the thread container",
    tags: ["ui", "desktopOnly"],
    dependentCorePlugins: ["spaRouter"],
  },
  imageGenModelSelector: {
    id: "imageGenModelSelector",
    routeSegment: "image-gen-model-selector",
    title: "Image Generation Model Selector",
    description: "Enable selection of different image generation models",
    tags: ["ui", "ux", "desktopOnly", "pplxPro"],
    dependentDomObservers: ["coreDomObserver:thread"],
    dependentCorePlugins: ["spaRouter", "webSocket"],
  },
  onCloudflareTimeoutAutoReload: {
    id: "onCloudflareTimeoutAutoReload",
    routeSegment: "on-cloudflare-timeout-auto-reload",
    title: "Auto Reload on Cloudflare Timeout",
    description: "Auto reload the page on Cloudflare timeout",
    tags: ["ux"],
  },
  blockAnalyticEvents: {
    id: "blockAnalyticEvents",
    routeSegment: "block-analytic-events",
    title: "Block Analytic Events",
    description:
      "Prevent Perplexity from sending analytic/tracking events. For debugging purposes only",
    tags: ["privacy"],
    dependentCorePlugins: ["networkIntercept"],
  },
  "home:customSlogan": {
    id: "home:customSlogan",
    routeSegment: "home-custom-slogan",
    title: "Custom Home Slogan",
    description: "Customize the slogan on the home page",
    tags: ["ui", "forFun"],
    dependentDomObservers: ["coreDomObserver:home"],
    dependentCorePlugins: ["spaRouter"],
  },
  "home:hideHomepageWidgets": {
    id: "home:hideHomepageWidgets",
    routeSegment: "home-hide-homepage-widgets",
    title: "Hide Homepage Widgets",
    description:
      "Hide all finance, sports, weather, and other widgets on the home page",
    tags: ["ui"],
    dependentCorePlugins: ["spaRouter"],
  },
  "hide-get-mobile-app-cta-btn": {
    id: "hide-get-mobile-app-cta-btn",
    routeSegment: "hide-get-mobile-app-cta-btn",
    title: 'Hide "Get Mobile App" Button',
    description: 'Hide all "Get Mobile App" buttons on mobile screens',
    tags: ["ui"],
  },
  zenMode: {
    id: "zenMode",
    routeSegment: "zen-mode",
    title: "Zen Mode",
    description:
      "Hide elements on the page to focus on the content (toggleable). Enable via the Command Menu plugin.",
    tags: ["ui", "desktopOnly"],
    dependentCorePlugins: ["spaRouter"],
    dependentPlugins: ["commandMenu"],
  },
};
